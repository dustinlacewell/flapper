{
    "files.exclude": {
        "**/.git": true,
        "**/.svn": true,
        "**/.hg": true,
        "**/CVS": true,
        "**/.DS_Store": true,
        "**/src/**/*.js": true,
        "**/*.js.map": true,
        "**/*.d.ts": true
    },
    // use workspace typescript
    "typescript.tsdk": "./node_modules/typescript/lib",

    // default linters
    "[javascript]": {
        "editor.defaultFormatter": "dbaeumer.vscode-eslint"
    },
    "[typescriptreact]": {
        "editor.defaultFormatter": "dbaeumer.vscode-eslint"
    },
    "[javascriptreact]": {
        "editor.defaultFormatter": "dbaeumer.vscode-eslint"
    },
    "[typescript]": {
        "editor.defaultFormatter": "dbaeumer.vscode-eslint"
    },
    "[json]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[jsonc]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "tsImportSorter.configuration.autoFormat": "off",

    // disable vscode format on save
    "editor.formatOnSave": false,

    // eslint
    "eslint.format.enable": true,
    "eslint.lintTask.enable": true,
    "editor.codeActionsOnSave": {
        "source.addMissingImports": true,
        "editor.action.formatDocument": true,
        "source.fixAll": true
    },
    "eslint.validate": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact"
    ],

    // import grouping and sorting
    "tsImportSorter.configuration.groupRules": [
        "^react(-dom)?$",
        {},
        "^[@]",
        "^[.]"
    ],

    // format command
    "multiCommand.commands": [
        {
            "command": "multiCommand.formatAndfix",
            "sequence": ["editor.action.formatDocument"]
        }
    ],

    // local dictionary
    "cSpell.words": [
        "Boid",
        "domview",
        "useanimationframe",
        "useengine",
        "useentity",
        "usefacet",
        "usequery",
        "usestatefulref",
        "usesystem",
        "usetimer"
    ]
}
